{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\C#\\\\Book_Reservation_app\\\\reservation_system\\\\src\\\\BooksList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createElement as _createElement } from 'react';\nimport axios from 'axios';\nimport { Book } from './Book';\nimport Filters from './Filters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BooksList() {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const [titleFilter, setTitleFilter] = useState(\"\");\n  const [yearFilter, setYearFilter] = useState(\"\");\n  const [typeFilter, setTypeFilter] = useState(\"all\");\n  useEffect(() => {\n    axios.get(\"/api/books\").then(response => {\n      setBooks(response.data);\n      setFilteredBooks(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching books:\", error);\n    });\n  }, []);\n  const handleFilter = () => {\n    let filtered = books;\n    if (titleFilter) {\n      filtered = filtered.filter(book => book.title.toLowerCase().replace(/\\s+/g, '').includes(titleFilter.toLowerCase().replace(/\\s+/g, '')));\n    }\n    if (yearFilter) {\n      filtered = filtered.filter(book => book.year.startsWith(yearFilter));\n    }\n    if (typeFilter !== \"all\") {\n      filtered = filtered.filter(book => typeFilter === \"audiobook\" ? book.isAudioBook : !book.isAudioBook);\n    }\n    setFilteredBooks(filtered);\n  };\n  const handleClearFilters = () => {\n    setTitleFilter(\"\");\n    setYearFilter(\"\");\n    setTypeFilter(\"all\");\n    setFilteredBooks(books);\n  };\n  if (!filteredBooks) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"txt\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"txt title\",\n      children: \"Books List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      titleFilter: titleFilter,\n      setTitleFilter: setTitleFilter,\n      yearFilter: yearFilter,\n      setYearFilter: setYearFilter,\n      typeFilter: typeFilter,\n      setTypeFilter: setTypeFilter,\n      handleFilter: handleFilter,\n      handleClearFilters: handleClearFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"books-container\",\n      children: filteredBooks.map(book => /*#__PURE__*/_createElement(Book, {\n        ...book,\n        key: book.id,\n        id: book.id,\n        title: book.title,\n        author: book.author,\n        year: book.year,\n        image: book.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(BooksList, \"fXEOzTlG0Eirztbk9jtr5Oyuyks=\");\n_c = BooksList;\nvar _c;\n$RefreshReg$(_c, \"BooksList\");","map":{"version":3,"names":["React","useState","useEffect","createElement","_createElement","axios","Book","Filters","jsxDEV","_jsxDEV","BooksList","_s","books","setBooks","filteredBooks","setFilteredBooks","titleFilter","setTitleFilter","yearFilter","setYearFilter","typeFilter","setTypeFilter","get","then","response","data","catch","error","console","handleFilter","filtered","filter","book","title","toLowerCase","replace","includes","year","startsWith","isAudioBook","handleClearFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","key","id","author","image","__self","__source","_c","$RefreshReg$"],"sources":["D:/Development/C#/Book_Reservation_app/reservation_system/src/BooksList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Book } from './Book';\r\nimport Filters from './Filters';\r\n\r\nexport default function BooksList() {\r\n    const [books, setBooks] = useState([]);\r\n    const [filteredBooks, setFilteredBooks] = useState([]);\r\n    const [titleFilter, setTitleFilter] = useState(\"\");\r\n    const [yearFilter, setYearFilter] = useState(\"\");\r\n    const [typeFilter, setTypeFilter] = useState(\"all\");\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/api/books\")\r\n            .then(response => {\r\n                setBooks(response.data);\r\n                setFilteredBooks(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching books:\", error);\r\n            });\r\n    }, []);\r\n\r\n    const handleFilter = () => {\r\n        let filtered = books;\r\n\r\n        if (titleFilter) {\r\n            filtered = filtered.filter(book =>\r\n                book.title.toLowerCase().replace(/\\s+/g, '').includes(titleFilter.toLowerCase().replace(/\\s+/g, ''))\r\n            );\r\n        }\r\n\r\n        if (yearFilter) {\r\n            filtered = filtered.filter(book => book.year.startsWith(yearFilter));\r\n        }\r\n\r\n        if (typeFilter !== \"all\") {\r\n            filtered = filtered.filter(book =>\r\n                typeFilter === \"audiobook\" ? book.isAudioBook : !book.isAudioBook\r\n            );\r\n        }\r\n\r\n        setFilteredBooks(filtered);\r\n    };\r\n\r\n    const handleClearFilters = () => {\r\n        setTitleFilter(\"\");\r\n        setYearFilter(\"\");\r\n        setTypeFilter(\"all\");\r\n        setFilteredBooks(books);\r\n    };\r\n\r\n    if (!filteredBooks) {\r\n        return <p className='txt'>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"filters-container\">\r\n            <h1 className=\"txt title\">Books List</h1>\r\n            <Filters \r\n                titleFilter={titleFilter}\r\n                setTitleFilter={setTitleFilter}\r\n                yearFilter={yearFilter}\r\n                setYearFilter={setYearFilter}\r\n                typeFilter={typeFilter}\r\n                setTypeFilter={setTypeFilter}\r\n                handleFilter={handleFilter}\r\n                handleClearFilters={handleClearFilters}\r\n            />\r\n            <div className='books-container'>\r\n                {filteredBooks.map(book => (\r\n                    <Book\r\n                        {...book} \r\n                        key={book.id}\r\n                        id={book.id}\r\n                        title={book.title}\r\n                        author={book.author}\r\n                        year={book.year}\r\n                        image={book.image}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}